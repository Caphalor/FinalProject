/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PresentationLayer;//create ItemGUI JFrame inside the PresentationLayer

import BusinessLayer.Item;//import Item class from BusinessLayer package
import java.util.ArrayList;//import Arraylist funstions
import javax.swing.plaf.OptionPaneUI;

/**
 *
 * @author Administrator
 */
public class ItemGUI extends javax.swing.JFrame { //inhert swing JFrame for GUI functions 

    /**
     * Creates new form LoginMenu
     */
    public ItemGUI() { //main function of the program

        initComponents(); //initComponents method is read only to keep full control for the IDE
        setExtendedState(MAXIMIZED_BOTH); //this code used to Maximize thw window
        jOptionPane1.setVisible(false); //invisible the jOptionPane
        fillItemId(); //call fillItemId sub program
        fillTable(); //call fillTable sub program

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtStockInHand = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        cmbItemID = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Menu");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Commands"));

        txtSearch.setText("Search");
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtSearchMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtSearchMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtSearchMouseReleased(evt);
            }
        });
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnEdit)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnNew)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Information"));

        jLabel1.setText("Item ID");

        jLabel3.setText("Item Name");

        jLabel4.setText("Price");

        jLabel5.setText("Stock in hand");

        cmbItemID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemIDItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtStockInHand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txtItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbItemID, 0, 82, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(53, 53, 53)
                        .addComponent(txtItemName, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStockInHand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Item List"));

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Price", "Stock in hand"
            }
        ));
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItem);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\JSaji\\Desktop\\sss.png")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenu1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenu1ItemStateChanged(evt);
            }
        });

        jMenuItem1.setText("Order");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Customer");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearScreen(); //call the clearScreen sub problem
        for (int x = (int) cmbItemID.getItemCount() + 1; x > 0; x++) { //get a Item count of the cmbItemID and create a loop
            String y = "Item0"; //create new string variable
            String z = y + x; //and equal the String variable and the Integer variable
            txtItemID.setText(z); //set the value to the txtItemID label
            break; //break the loop
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        if (txtSearch.getText().equalsIgnoreCase("Search")) { //check txtSearch textbox equals to Search
            txtSearch.setText(""); //if it is equals to the search then clear the value
        } else { // else do nothing
        }
    }//GEN-LAST:event_txtSearchMouseClicked

    private void txtSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseExited
        if (txtSearch.getText().equalsIgnoreCase("")) { //check txtSearch textbox equals to null
            txtSearch.setText("Search"); //if it is equals to the null then set text Search
        } else { // else do nothing
        }
    }//GEN-LAST:event_txtSearchMouseExited

    private void txtSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseEntered
        //txtSearch.setText("Search");
    }//GEN-LAST:event_txtSearchMouseEntered

    private void txtSearchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseReleased
        //txtSearch.setText("Search");
    }//GEN-LAST:event_txtSearchMouseReleased

    private void txtSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMousePressed
        //txtSearch.setText("Search");
    }//GEN-LAST:event_txtSearchMousePressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased

        String searchItemName = txtSearch.getText(); //get ItemID from the txtSearch textfield and pass to the searchItemID variable
        ArrayList<Item> itemList = new Item().searchItem(searchItemName); //pass the ItemID to the searchItem sub program and get entire items from the database depends on the ItemID
        Object obj[][] = new Object[itemList.size()][4]; //create new object for the table
        int x = 0; //create new variable
        for (Item itemObj : itemList) {//use for each loop to display entire details
            obj[x][0] = itemObj.getItemID(); //for first column to insert ItemID
            obj[x][1] = itemObj.getItemName();  //for second column to insert ItemName
            obj[x][2] = itemObj.getPrice(); //for third column to insert Price
            obj[x][3] = itemObj.getStockInHand();//for forth column to insert StockInHand
            x++; //increate loop iteration

        }

        tblItem.setModel(new javax.swing.table.DefaultTableModel( //create new table models using swing
                obj, //declare the object here
                new Object[]{ //create new object
                    "Item ID", "Item Name", "Price", "Stock in hand" //give the column names
                }));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        if (txtSearch.getText().equalsIgnoreCase("Search")) {
            txtSearch.setText("");
        } else {
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
      
        if(txtItemID.getText() == null) {
            String ERROR = "Enter Item ID First"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }else if(txtItemName.getText().length() == 0){
            String ERROR = "Enter Item Name"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }else if(txtPrice.getText().length() == 0){
            String ERROR = "Enter the prize"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }else if(txtStockInHand.getText().length() == 0){
        
            String ERROR = "Enter the Stock"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        
        
        }else{
        
        Item itemObj = new Item(); //create object for Item class
        itemObj.setItemID(txtItemID.getText()); //get ItemID from txtItemID textfield
        itemObj.setItemName(txtItemName.getText()); //get ItemName from txtItemName textfield
        itemObj.setPrice(s2d(txtPrice.getText())); //get Price from txtPrice textfield
        itemObj.setStockInHand(s2I(txtStockInHand.getText())); //get Stock In Hand amount from txtStockInhand textfield

        boolean result = itemObj.addItem(itemObj); //add to the addItem sub program
        if (result) { //if the result equals true
            fillItemId(); //call the fillItemId subprogram
            fillTable(); //call the fillTable subprogram
            String Message = "Item Successfully Added to the DataBase"; //display the message
            String Result = "Message";
            jOptionPane1.showMessageDialog(this, Message, Result, WIDTH, null);
        } else {
            String ERROR = "Error in Adding to the database"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }}
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
       
        if(txtItemID.getText() == null) {
            String ERROR = "Enter Item ID First"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }else if(txtItemName.getText().length() == 0){
            String ERROR = "Enter Item Name"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }else if(txtPrice.getText().length() == 0){
            String ERROR = "Enter the prize"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }else if(txtStockInHand.getText().length() == 0){
        
            String ERROR = "Enter the Stock"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        
        
        }else{
   
        Item itemObj = new Item(); //create object for Item class
        itemObj.setItemID(txtItemID.getText()); //get ItemID from txtItemID textfield
        itemObj.setItemName(txtItemName.getText()); //get ItemName from txtItemName textfield
        itemObj.setPrice(s2d(txtPrice.getText())); //get Price from txtPrice textfield
        itemObj.setStockInHand(s2I(txtStockInHand.getText())); //get Stock In Hand amount from txtStockInhand textfield

        boolean result = itemObj.editItem(itemObj); //add to the addItem sub program
        if (result) { //if the result equals true
            fillTable(); //call the fillTable subprogram
            String Message = "Item Successfully Edited to the DataBase"; //display the message
            String Result = "Message";
            jOptionPane1.showMessageDialog(this, Message, Result, WIDTH, null);
        } else {
            String ERROR = "Error in Editing to the database"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }    }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Item itemObj = new Item(); //create object for Item class
        String ItemID = txtItemID.getText(); //get the ItemID from the txtItemID and pass it to the ItemID
        boolean result = itemObj.removeItem(ItemID);  //Pass it to the removeItem subprogram 
        if (result) { //if the result equals true
            fillItemId(); //call the fillItemId subprogram
            fillTable(); //call the fillTable subprogram
            String Message = "Item Successfully removed from the DataBase"; //display the meessage
            String Result = "Message";
            jOptionPane1.showMessageDialog(this, Message, Result, WIDTH, null);
        } else {
            String ERROR = "Error in removing to the database"; //display the error message
            String Result = "ERROR";
            jOptionPane1.showMessageDialog(this, ERROR, Result, WIDTH, null);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cmbItemIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemIDItemStateChanged
        String searchItemID = (String) cmbItemID.getSelectedItem(); //pass the cmbItemID combobox SelectedItem to variable
        Item itemObjSearchById = new Item().getItem(searchItemID); //create object for the Item class and pass to the getItem sub program
        if (itemObjSearchById.getItemName() == null) { //check getMovieTitle variable is null
        } else { //if its not null
            txtItemID.setText(itemObjSearchById.getItemID()); //set ItemID to txtItemID textfield
            txtItemName.setText(itemObjSearchById.getItemName()); //set MovieID to txtMovieID textfield
            txtPrice.setText(d2s(itemObjSearchById.getPrice())); //set MovieID to txtMovieID textfield
            txtStockInHand.setText(I2s(itemObjSearchById.getStockInHand())); //set MovieID to txtMovieID textfield
        }
    }//GEN-LAST:event_cmbItemIDItemStateChanged

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
    }//GEN-LAST:event_txtSearchActionPerformed

    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        int row = tblItem.getSelectedRow(); //get the table row index and pass it to the row
        String column = tblItem.getModel().getValueAt(row, 0).toString(); //get the value of the table 
        Item itemObjSearchById = new Item().getItem(column); //pass it to the getItem subprogram
        if (itemObjSearchById.getItemName() == null) { //check Itemname null
        } else { // if not null
            cmbItemID.setSelectedItem(itemObjSearchById.getItemID()); //set ItemID to cmbItemID combobox
            txtItemID.setText(itemObjSearchById.getItemID()); //set ItemID to txtItemID textfield
            txtItemName.setText(itemObjSearchById.getItemName()); //set ItemName to txtItemName textfield
            txtPrice.setText(d2s(itemObjSearchById.getPrice())); //set Price to txtPrice textfield
            txtStockInHand.setText(I2s(itemObjSearchById.getStockInHand())); //set Stock to txtStockInHand textfield
        }
    }//GEN-LAST:event_tblItemMouseClicked

    private void jMenu1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenu1ItemStateChanged
        
    }//GEN-LAST:event_jMenu1ItemStateChanged

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        OrderGUI ordGUI = new OrderGUI();
        ordGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        CustomerGUI cusObj = new CustomerGUI();
        cusObj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());

                    break;
                }

            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ItemGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JComboBox cmbItemID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStockInHand;
    // End of variables declaration//GEN-END:variables

    public int s2I(String value) { //this sub sub program used to convert String to Integer
        return Integer.parseInt(value); //convert the String to Integer and return the value
    }

    public String I2s(int value) { //this sub sub program used to convert Integer to String
        Integer con = new Integer(value); //convert the Integer to String
        return con.toString(); //return the String value
    }

    public double s2d(String val) { //this sub sub program used to convert String to Double
        return Double.parseDouble(val); //convert the String to Double and return the value
    }

    public String d2s(double val) { //this sub sub program used to convert Double to String
        Double dou = new Double(val); //convert the Double to String
        return dou.toString(); //return the Double value
    }


    public void clearScreen() { //this sub program used to clear the textfields value
        txtItemID.setText("");
        txtItemName.setText("");
        txtPrice.setText("");
        txtStockInHand.setText("");
    }

    public void fillItemId() { //this sub program used to get entire ItemIDs from the database
        cmbItemID.removeAllItems(); //remove all current cmbItemID combobox
        ArrayList<Item> ItemList = new Item().getAllItem(); //get entire ItemIDs from the database and save it from the ArrayList
        for (Item itemObj : ItemList) { //use for each loop to display entire details
            cmbItemID.addItem(itemObj.getItemID()); //add ItemIDs to the cmbItemID combobox
        }
    }
 
    public void fillTable() { //this sub program used to get entire Item details from the database and display from the table

        ArrayList<Item> itemList = new Item().getAllItemDB(); //get entire items from the database save to the ArrayList
        Object obj[][] = new Object[itemList.size()][4]; //create new object for the table
        int x = 0; //create new variable
        for (Item itemObj : itemList) { //use for each loop to display entire details
            obj[x][0] = itemObj.getItemID(); //for first column to insert ItemID
            obj[x][1] = itemObj.getItemName(); //for second column to insert ItemName
            obj[x][2] = itemObj.getPrice(); //for third column to insert Price
            obj[x][3] = itemObj.getStockInHand(); //for forth column to insert StockInHand
            x++; //increate loop iteration
        }

        tblItem.setModel(new javax.swing.table.DefaultTableModel( //create new table models using swing
                obj, //declare the object here
                new Object[]{ //create new object
                    "Item ID", "Item Name", "Price", "Stock in hand" //give the column names
                }));
    }

    public void SearchID() { 
        String searchItemName = txtSearch.getText();
        ArrayList<Item> itemList = new Item().searchItemID(searchItemName);
        Object obj[][] = new Object[itemList.size()][4];
        int x = 0;
        for (Item itemObj : itemList) {
            obj[x][0] = itemObj.getItemID();
            obj[x][1] = itemObj.getItemName();
            obj[x][2] = itemObj.getPrice();
            obj[x][3] = itemObj.getStockInHand();
            x++;
        }

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
                obj,
                new Object[]{
                    "Item ID", "Item Name", "Price", "Stock in hand"
                }));
    }
}
